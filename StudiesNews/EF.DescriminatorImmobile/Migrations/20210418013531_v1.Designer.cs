// <auto-generated />
using System;
using EF.DescriminatorImmobile.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF.DescriminatorImmobile.Migrations
{
    [DbContext(typeof(ImovelContext))]
    [Migration("20210418013531_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF.DescriminatorImmobile.Models.Tipo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TipoImovel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imovel_descriminator_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");

                    b.HasDiscriminator<string>("imovel_descriminator_type").HasValue("Tipo");
                });

            modelBuilder.Entity("EF.DescriminatorImmobile.Models.Comercial", b =>
                {
                    b.HasBaseType("EF.DescriminatorImmobile.Models.Tipo");

                    b.HasDiscriminator().HasValue("comercial");
                });

            modelBuilder.Entity("EF.DescriminatorImmobile.Models.Residencial", b =>
                {
                    b.HasBaseType("EF.DescriminatorImmobile.Models.Tipo");

                    b.HasDiscriminator().HasValue("residencial");
                });
#pragma warning restore 612, 618
        }
    }
}
